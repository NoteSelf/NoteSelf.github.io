language: node_js
cache: yarn
node_js:
  - "10"
before_install:
  # I'm naming the clone folders for easier reference later
  - "git clone https://github.com/danielo515/tiddlypouch.git tpouch"
  - "git clone https://github.com/felixhayashi/TW5-TiddlyMap.git tiddlymap" # required by tiddlymap edition
  - "git clone https://github.com/felixhayashi/TW5-Vis.js.git vis" # required by tiddlymap
  - ls -l
before_script:
 - export TIDDLYWIKI_PLUGIN_PATH="$(pwd)/plugins:$(pwd)/node_modules/tw-pouchdb:$(pwd)/tpouch/dist:$(pwd)/tiddlymap/dist:$(pwd)/vis/dist" # Plugins paths with all deps globally available
 - (cd tpouch && yarn && gulp travis --production)
script:
 # ===== Builds NoteSelf core plugins
 - yarn build-plugin 
 # =====  Plugin library
 - yarn tiddlywiki --version
 - yarn tiddlywiki ./wiki --verbose --output ./dist --build index --build favicon --build library
 # ===== Build the editions
 - | 
    for edition in editions/*; do
      yarn tiddlywiki $edition --verbose --build index
    done
 # ===== Non Minified version =====
 - (cd ./tpouch && gulp travis) # Build non minified version of TPouch code ( no --production flag )
 - yarn tiddlywiki ./editions/online --verbose --build dev # This is the same as the online one, but to a different dist path
 # ===== Build edge version with the latest tiddlywiki and experimental plugins =====
 - yarn add tiddlywiki@latest  
 - yarn tiddlywiki --version
 - yarn tiddlywiki ./editions/edge --verbose --build index # build the edge edition (includes not well tested stuff)
 - yarn remove tiddlywiki
 # === Measures file sizes and adds that data to the pull request ===
 # The var on the for loop includes each path with a trailing slash (/)
 - |
    for edition in dist/*/; do
      python node_modules/travis-weigh-in/weigh_in.py ${edition}index.html || true 
    done
 - python node_modules/travis-weigh-in/weigh_in.py dist/index.html || true
 - python node_modules/travis-weigh-in/weigh_in.py dist/offline.html || true
after_script:
 - "ls -lR dist"

after_success:
- node ./copy-to-dist.js # this allows to test the service worker on the preview too
- echo Deploying to netlify preview
# - wget -qO- 'https://cli.netlify.com/download/latest/linux' | tar xz
# - ./netlifyctl -A "$NETLIFY_TOKEN" deploy --draft --site-id "$NETLIFY_SITE_ID" --publish-directory ./dist
- |
  test "$TRAVIS_PULL_REQUEST" != "false" &&\
  yarn add global netlify-cli &&\
  netlify deploy --auth="$NETLIFY_TOKEN" --dir="./dist" --site="$NETLIFY_SITE_ID" --message="CI - $TRAVIS_BRANCH"
deploy:
  provider: pages
  skip_cleanup: true
  local_dir: ./dist
  target_branch: master
  github_token: $GITHUB_TOKEN # Set in travis-ci.org dashboard
  on:
    branch: develop
